{"version":3,"sources":["../../src/error/CannotInjectError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH;IAAuC,qCAAK;IAGxC,2BAAY,MAAc,EAAE,YAAoB;QAAhD,YACI,kBACI,gCAA6B,MAAM,CAAC,WAAW,CAAC,IAAI,SAAI,YAAY,SAAK;YACzE,8HAA8H,CACjI,SAEJ;QARD,UAAI,GAAG,sBAAsB,CAAC;QAO1B,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;;IAC7D,CAAC;IAEL,wBAAC;AAAD,CAXA,AAWC,CAXsC,KAAK,GAW3C;AAXY,8CAAiB","file":"CannotInjectError.js","sourcesContent":["/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nexport class CannotInjectError extends Error {\n    name = \"ServiceNotFoundError\";\n\n    constructor(target: Object, propertyName: string) {\n        super(\n            `Cannot inject value into \"${target.constructor.name}.${propertyName}\". ` +\n            `Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.`\n        );\n        Object.setPrototypeOf(this, CannotInjectError.prototype);\n    }\n\n}"],"sourceRoot":".."}